{"id":"node_modules/efrt/src/pack/trie.js","dependencies":[{"name":"D:\\Documentos\\www\\RichardBot\\package.json","includedInParent":true,"mtime":1742097817779},{"name":"D:\\Documentos\\www\\RichardBot\\node_modules\\efrt\\package.json","includedInParent":true,"mtime":1742097815641},{"name":"./methods.js","loc":{"line":1,"column":20,"index":20},"parent":"D:\\Documentos\\www\\RichardBot\\node_modules\\efrt\\src\\pack\\trie.js","resolved":"D:\\Documentos\\www\\RichardBot\\node_modules\\efrt\\src\\pack\\methods.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _methods = _interopRequireDefault(require(\"./methods.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/*\n A JavaScript implementation of a Trie search datastructure.\nEach node of the Trie is an Object that can contain the following properties:\n      '' - If present (with value == 1), the node is a Terminal Node - the prefix\n          leading to this node is a word in the dictionary.\n      numeric properties (value == 1) - the property name is a terminal string\n          so that the prefix + string is a word in the dictionary.\n      Object properties - the property name is one or more characters to be consumed\n          from the prefix of the test string, with the remainder to be checked in\n          the child node.\n      '_c': A unique name for the node (starting from 1), used in combining Suffixes.\n      '_n': Created when packing the Trie, the sequential node number\n          (in pre-order traversal).\n      '_d': The number of times a node is shared (it's in-degree from other nodes).\n      '_v': Visited in DFS.\n      '_g': For singleton nodes, the name of it's single property.\n */\nvar Trie = function Trie(words) {\n  this.root = {};\n  this.lastWord = '';\n  this.suffixes = {};\n  this.suffixCounts = {};\n  this.cNext = 1;\n  this.wordCount = 0;\n  this.insertWords(words);\n  this.vCur = 0;\n};\nObject.keys(_methods.default).forEach(function (k) {\n  Trie.prototype[k] = _methods.default[k];\n});\nvar _default = exports.default = Trie;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":0},"name":"_methods"},{"generated":{"line":7,"column":12},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":15},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":0},"name":"_interopRequireDefault"},{"generated":{"line":7,"column":37},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":38},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":45},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34}},{"generated":{"line":8,"column":9},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34},"name":"_interopRequireDefault"},{"generated":{"line":8,"column":32},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34},"name":"e"},{"generated":{"line":8,"column":33},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34}},{"generated":{"line":8,"column":44},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34},"name":"e"},{"generated":{"line":8,"column":45},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34}},{"generated":{"line":8,"column":49},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34},"name":"e"},{"generated":{"line":8,"column":50},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34}},{"generated":{"line":8,"column":51},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34},"name":"__esModule"},{"generated":{"line":8,"column":61},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34}},{"generated":{"line":8,"column":64},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34},"name":"e"},{"generated":{"line":8,"column":65},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34}},{"generated":{"line":8,"column":70},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34},"name":"default"},{"generated":{"line":8,"column":77},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34}},{"generated":{"line":8,"column":79},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34},"name":"e"},{"generated":{"line":8,"column":80},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":1,"column":34}},{"generated":{"line":9,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":6,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":7,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":8,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":10,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":11,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":12,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":13,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":14,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":15,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":16,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":17,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":18,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":4},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":19,"column":6},"name":"Trie"},{"generated":{"line":26,"column":8},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":19,"column":10}},{"generated":{"line":26,"column":11},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":19,"column":13}},{"generated":{"line":26,"column":20},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":19,"column":6},"name":"Trie"},{"generated":{"line":26,"column":24},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":19,"column":10},"name":"Trie"},{"generated":{"line":26,"column":25},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":19,"column":23},"name":"words"},{"generated":{"line":26,"column":30},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":19,"column":28}},{"generated":{"line":26,"column":32},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":19,"column":30}},{"generated":{"line":27,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":20,"column":2}},{"generated":{"line":27,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":20,"column":6}},{"generated":{"line":27,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":20,"column":7},"name":"root"},{"generated":{"line":27,"column":11},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":20,"column":11}},{"generated":{"line":27,"column":14},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":20,"column":14}},{"generated":{"line":27,"column":15},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":20,"column":15}},{"generated":{"line":27,"column":16},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":20,"column":16}},{"generated":{"line":28,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":21,"column":2}},{"generated":{"line":28,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":21,"column":6}},{"generated":{"line":28,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":21,"column":7},"name":"lastWord"},{"generated":{"line":28,"column":15},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":21,"column":15}},{"generated":{"line":28,"column":18},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":21,"column":18}},{"generated":{"line":28,"column":20},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":21,"column":20}},{"generated":{"line":29,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":22,"column":2}},{"generated":{"line":29,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":22,"column":6}},{"generated":{"line":29,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":22,"column":7},"name":"suffixes"},{"generated":{"line":29,"column":15},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":22,"column":15}},{"generated":{"line":29,"column":18},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":22,"column":18}},{"generated":{"line":29,"column":19},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":22,"column":19}},{"generated":{"line":29,"column":20},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":22,"column":20}},{"generated":{"line":30,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":23,"column":2}},{"generated":{"line":30,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":23,"column":6}},{"generated":{"line":30,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":23,"column":7},"name":"suffixCounts"},{"generated":{"line":30,"column":19},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":23,"column":19}},{"generated":{"line":30,"column":22},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":23,"column":22}},{"generated":{"line":30,"column":23},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":23,"column":23}},{"generated":{"line":30,"column":24},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":23,"column":24}},{"generated":{"line":31,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":24,"column":2}},{"generated":{"line":31,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":24,"column":6}},{"generated":{"line":31,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":24,"column":7},"name":"cNext"},{"generated":{"line":31,"column":12},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":24,"column":12}},{"generated":{"line":31,"column":15},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":24,"column":15}},{"generated":{"line":31,"column":16},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":24,"column":16}},{"generated":{"line":32,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":25,"column":2}},{"generated":{"line":32,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":25,"column":6}},{"generated":{"line":32,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":25,"column":7},"name":"wordCount"},{"generated":{"line":32,"column":16},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":25,"column":16}},{"generated":{"line":32,"column":19},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":25,"column":19}},{"generated":{"line":32,"column":20},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":25,"column":20}},{"generated":{"line":33,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":26,"column":2}},{"generated":{"line":33,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":26,"column":6}},{"generated":{"line":33,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":26,"column":7},"name":"insertWords"},{"generated":{"line":33,"column":18},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":26,"column":18}},{"generated":{"line":33,"column":19},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":26,"column":19},"name":"words"},{"generated":{"line":33,"column":24},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":26,"column":24}},{"generated":{"line":33,"column":25},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":26,"column":25}},{"generated":{"line":34,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":27,"column":2}},{"generated":{"line":34,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":27,"column":6}},{"generated":{"line":34,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":27,"column":7},"name":"vCur"},{"generated":{"line":34,"column":11},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":27,"column":11}},{"generated":{"line":34,"column":14},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":27,"column":14}},{"generated":{"line":34,"column":15},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":27,"column":15}},{"generated":{"line":35,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":1},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":28,"column":1}},{"generated":{"line":36,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":0},"name":"Object"},{"generated":{"line":36,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":6}},{"generated":{"line":36,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":7},"name":"keys"},{"generated":{"line":36,"column":11},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":11}},{"generated":{"line":36,"column":12},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":12},"name":"methods"},{"generated":{"line":36,"column":28},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":19}},{"generated":{"line":36,"column":29},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":20}},{"generated":{"line":36,"column":30},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":21},"name":"forEach"},{"generated":{"line":36,"column":37},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":28}},{"generated":{"line":36,"column":38},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":29}},{"generated":{"line":36,"column":48},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":39},"name":"k"},{"generated":{"line":36,"column":49},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":40}},{"generated":{"line":36,"column":51},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":30,"column":42}},{"generated":{"line":37,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":2},"name":"Trie"},{"generated":{"line":37,"column":6},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":6}},{"generated":{"line":37,"column":7},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":7},"name":"prototype"},{"generated":{"line":37,"column":16},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":16}},{"generated":{"line":37,"column":17},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":17},"name":"k"},{"generated":{"line":37,"column":18},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":18}},{"generated":{"line":37,"column":19},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":19}},{"generated":{"line":37,"column":22},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":22},"name":"methods"},{"generated":{"line":37,"column":38},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":29}},{"generated":{"line":37,"column":39},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":30},"name":"k"},{"generated":{"line":37,"column":40},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":31}},{"generated":{"line":37,"column":41},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":31,"column":32}},{"generated":{"line":38,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":0}},{"generated":{"line":38,"column":1},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":1}},{"generated":{"line":38,"column":2},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":2}},{"generated":{"line":39,"column":4},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":2},"name":"_default"},{"generated":{"line":39,"column":12},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":2}},{"generated":{"line":39,"column":15},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":2},"name":"exports"},{"generated":{"line":39,"column":22},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":2}},{"generated":{"line":39,"column":23},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":2},"name":"default"},{"generated":{"line":39,"column":30},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":32,"column":2}},{"generated":{"line":39,"column":33},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":34,"column":15},"name":"Trie"},{"generated":{"line":39,"column":37},"source":"node_modules/efrt/src/pack/trie.js","original":{"line":34,"column":19}}],"sources":{"node_modules/efrt/src/pack/trie.js":"import methods from './methods.js'\n/*\n A JavaScript implementation of a Trie search datastructure.\nEach node of the Trie is an Object that can contain the following properties:\n      '' - If present (with value == 1), the node is a Terminal Node - the prefix\n          leading to this node is a word in the dictionary.\n      numeric properties (value == 1) - the property name is a terminal string\n          so that the prefix + string is a word in the dictionary.\n      Object properties - the property name is one or more characters to be consumed\n          from the prefix of the test string, with the remainder to be checked in\n          the child node.\n      '_c': A unique name for the node (starting from 1), used in combining Suffixes.\n      '_n': Created when packing the Trie, the sequential node number\n          (in pre-order traversal).\n      '_d': The number of times a node is shared (it's in-degree from other nodes).\n      '_v': Visited in DFS.\n      '_g': For singleton nodes, the name of it's single property.\n */\nconst Trie = function (words) {\n  this.root = {}\n  this.lastWord = ''\n  this.suffixes = {}\n  this.suffixCounts = {}\n  this.cNext = 1\n  this.wordCount = 0\n  this.insertWords(words)\n  this.vCur = 0\n}\n\nObject.keys(methods).forEach(function (k) {\n  Trie.prototype[k] = methods[k]\n})\n\nexport default Trie\n"},"lineCount":null}},"error":null,"hash":"c42f2bfb937ba1f69cf87a5532cbd03f","cacheData":{"env":{}}}